//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_bd "bytes";_eg "compress/gzip";_d "crypto";_ef "crypto/aes";_bff "crypto/cipher";_dg "crypto/rand";_de "crypto/rsa";_fa "crypto/sha512";_ee "crypto/x509";_a "encoding/base64";_bcb "encoding/hex";_bg "encoding/json";_bdc "encoding/pem";
_be "errors";_df "fmt";_eef "github.com/unidoc/unipdf/v3/common";_ea "io";_bb "io/ioutil";_c "net";_bc "net/http";_ba "os";_f "path/filepath";_g "sort";_gb "strings";_b "sync";_bf "time";);func _gea (_gab string ,_dff string ,_eag string )(string ,error ){_cd :=_gb .Index (_eag ,_gab );
if _cd ==-1{return "",_df .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_aebd :=_gb .Index (_eag ,_dff );if _aebd ==-1{return "",_df .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
};_gg :=_cd +len (_gab )+1;return _eag [_gg :_aebd -1],nil ;};const _efd ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;
OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;RemainingDocs int64 `json:"rd"`;
LastReported _bf .Time `json:"lr"`;LastWritten _bf .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;
Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;Usage map[string ]int `json:"u"`;};var _cba =_bf .Date (2019,6,6,0,0,0,0,_bf .UTC );
func GetMeteredState ()(MeteredStatus ,error ){if _edc ==nil {return MeteredStatus {},_be .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};if !_edc ._cc ||len (_edc ._gca )==0{return MeteredStatus {},_be .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_aga ,_gad :=_cebe .loadState (_edc ._gca );if _gad !=nil {_eef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gad );return MeteredStatus {},_gad ;};if _aga .Docs > 0{_fefg :=_cbg ("","",true );if _fefg !=nil {return MeteredStatus {},_fefg ;
};};_fbb .Lock ();defer _fbb .Unlock ();_bdg :=_dcb ();_bdg ._dgcc =_edc ._gca ;_fbf ,_gad :=_bdg .getStatus ();if _gad !=nil {return MeteredStatus {},_gad ;};if !_fbf .Valid {return MeteredStatus {},_be .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_gada :=MeteredStatus {OK :true ,Credits :_fbf .OrgCredits ,Used :_fbf .OrgUsed };return _gada ,nil ;};func _cg (_bgc string ,_ae []byte )(string ,error ){_fe ,_ :=_bdc .Decode ([]byte (_bgc ));if _fe ==nil {return "",_df .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_cge ,_bga :=_ee .ParsePKCS1PrivateKey (_fe .Bytes );if _bga !=nil {return "",_bga ;};_bee :=_fa .New ();_bee .Write (_ae );_aa :=_bee .Sum (nil );_aeb ,_bga :=_de .SignPKCS1v15 (_dg .Reader ,_cge ,_d .SHA512 ,_aa );if _bga !=nil {return "",_bga ;};_gf :=_a .StdEncoding .EncodeToString (_ae );
_gf +="\u000a\u002b\u000a";_gf +=_a .StdEncoding .EncodeToString (_aeb );return _gf ,nil ;};type defaultStateHolder struct{};func _fdg (_bfgc *_bc .Response )([]byte ,error ){var _cfff []byte ;_ccb ,_bfc :=_bdcg (_bfgc );if _bfc !=nil {return _cfff ,_bfc ;
};return _bb .ReadAll (_ccb );};func (_aebe *LicenseKey )ToString ()string {if _aebe ._cc {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};_ega :=_df .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_aebe .LicenseId );
_ega +=_df .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_aebe .CustomerId );_ega +=_df .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_aebe .CustomerName );
_ega +=_df .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_aebe .Tier );_ega +=_df .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_eef .UtcTimeFormat (_aebe .CreatedAt ));if _aebe .ExpiresAt ==nil {_ega +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";
}else {_ega +=_df .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_eef .UtcTimeFormat (*_aebe .ExpiresAt ));};_ega +=_df .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_aebe .CreatorName ,_aebe .CreatorEmail );
return _ega ;};var _cebe stateLoader =defaultStateHolder {};func (_eb *LicenseKey )getExpiryDateToCompare ()_bf .Time {if _eb .Trial {return _bf .Now ().UTC ();};return _eef .ReleasedAt ;};type MeteredStatus struct{OK bool ;Credits int64 ;Used int64 ;};
func (_dfg defaultStateHolder )updateState (_gadb ,_cdfb ,_agfa string ,_cf int ,_gce bool ,_ecg int ,_ebc int ,_cgb _bf .Time ,_ggcc map[string ]int )error {_bgg :=_gae ();if len (_bgg )==0{return _be .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_afbc :=_f .Join (_bgg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_geb :=_ba .MkdirAll (_afbc ,0777);if _geb !=nil {return _geb ;};if len (_gadb )< 20{return _be .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_bfg :=[]byte (_gadb );
_fag :=_fa .Sum512_256 (_bfg [:20]);_bfe :=_bcb .EncodeToString (_fag [:]);_eagg :=_f .Join (_afbc ,_bfe );var _gge reportState ;_gge .Docs =int64 (_cf );_gge .NumErrors =int64 (_ebc );_gge .LimitDocs =_gce ;_gge .RemainingDocs =int64 (_ecg );_gge .LastWritten =_bf .Now ().UTC ();
_gge .LastReported =_cgb ;_gge .Instance =_cdfb ;_gge .Next =_agfa ;_gge .Usage =_ggcc ;_defb ,_geb :=_bg .Marshal (_gge );if _geb !=nil {return _geb ;};const _bef ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";
_defb ,_geb =_dba ([]byte (_bef ),_defb );if _geb !=nil {return _geb ;};_geb =_bb .WriteFile (_eagg ,_defb ,0600);if _geb !=nil {return _geb ;};return nil ;};func _gae ()string {_eaa :=_ba .Getenv ("\u0048\u004f\u004d\u0045");if len (_eaa )==0{_eaa ,_ =_ba .UserHomeDir ();
};return _eaa ;};func _bdcg (_bgaf *_bc .Response )(_ea .ReadCloser ,error ){var _adad error ;var _cbae _ea .ReadCloser ;switch _gb .ToLower (_bgaf .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_cbae ,_adad =_eg .NewReader (_bgaf .Body );
if _adad !=nil {return _cbae ,_adad ;};defer _cbae .Close ();default:_cbae =_bgaf .Body ;};return _cbae ,nil ;};func _fcc (_gbf []byte )(_ea .Reader ,error ){_acg :=new (_bd .Buffer );_eee :=_eg .NewWriter (_acg );_eee .Write (_gbf );_fca :=_eee .Close ();
if _fca !=nil {return nil ,_fca ;};return _acg ,nil ;};const _aacc ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";func MakeUnlicensedKey ()*LicenseKey {_gbgf :=LicenseKey {};_gbgf .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_gbgf .Tier =LicenseTierUnlicensed ;_gbgf .CreatedAt =_bf .Now ().UTC ();_gbgf .CreatedAtInt =_gbgf .CreatedAt .Unix ();return &_gbgf ;};func Track (docKey string ,useKey string )error {return _cbg (docKey ,useKey ,false )};func (_aab *LicenseKey )IsLicensed ()bool {return _aab .Tier !=LicenseTierUnlicensed ||_aab ._cc };
var _fbb =&_b .Mutex {};func GetLicenseKey ()*LicenseKey {if _edc ==nil {return nil ;};_gbga :=*_edc ;return &_gbga ;};func _cb (_fd string ,_dc string )([]byte ,error ){var (_bbd int ;_cga string ;);for _ ,_cga =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _bbd =_gb .Index (_dc ,_cga );
_bbd !=-1{break ;};};if _bbd ==-1{return nil ,_df .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");};_gc :=_dc [:_bbd ];
_gcb :=_bbd +len (_cga );_db :=_dc [_gcb :];if _gc ==""||_db ==""{return nil ,_df .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_dgc ,_gd :=_a .StdEncoding .DecodeString (_gc );if _gd !=nil {return nil ,_df .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_ge ,_gd :=_a .StdEncoding .DecodeString (_db );
if _gd !=nil {return nil ,_df .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_gbg ,_ :=_bdc .Decode ([]byte (_fd ));if _gbg ==nil {return nil ,_df .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_def ,_gd :=_ee .ParsePKIXPublicKey (_gbg .Bytes );if _gd !=nil {return nil ,_gd ;};_da :=_def .(*_de .PublicKey );if _da ==nil {return nil ,_df .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_dad :=_fa .New ();_dad .Write (_dgc );_gfe :=_dad .Sum (nil );_gd =_de .VerifyPKCS1v15 (_da ,_d .SHA512 ,_gfe ,_ge );if _gd !=nil {return nil ,_gd ;};return _dgc ,nil ;};type stateLoader interface{loadState (_aebg string )(reportState ,error );updateState (_gaf ,_cdd ,_bba string ,_bdcc int ,_bge bool ,_bfb int ,_gcf int ,_bec _bf .Time ,_bbad map[string ]int )error ;
};var _edc =MakeUnlicensedKey ();func (_aca *LicenseKey )isExpired ()bool {return _aca .getExpiryDateToCompare ().After (*_aca .ExpiresAt )};const _gec ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func _dcb ()*meteredClient {_eca :=meteredClient {_bbe :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_gdb :&_bc .Client {Timeout :30*_bf .Second }};if _agf :=_ba .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");
_gb .HasPrefix (_agf ,"\u0068\u0074\u0074\u0070"){_eca ._bbe =_agf ;};return &_eca ;};var _dcba map[string ]struct{};func _dcc ()([]string ,[]string ,error ){_ded ,_deac :=_c .Interfaces ();if _deac !=nil {return nil ,nil ,_deac ;};var _dacd []string ;
var _ccg []string ;for _ ,_cff :=range _ded {if _cff .Flags &_c .FlagUp ==0||_bd .Equal (_cff .HardwareAddr ,nil ){continue ;};_fac ,_baa :=_cff .Addrs ();if _baa !=nil {return nil ,nil ,_baa ;};_fde :=0;for _ ,_ddc :=range _fac {var _adg _c .IP ;switch _cda :=_ddc .(type ){case *_c .IPNet :_adg =_cda .IP ;
case *_c .IPAddr :_adg =_cda .IP ;};if _adg .IsLoopback (){continue ;};if _adg .To4 ()==nil {continue ;};_ccg =append (_ccg ,_adg .String ());_fde ++;};_fad :=_cff .HardwareAddr .String ();if _fad !=""&&_fde > 0{_dacd =append (_dacd ,_fad );};};return _dacd ,_ccg ,nil ;
};type meteredStatusForm struct{};func _dba (_dca ,_cbbg []byte )([]byte ,error ){_ceg ,_ebb :=_ef .NewCipher (_dca );if _ebb !=nil {return nil ,_ebb ;};_ff :=make ([]byte ,_ef .BlockSize +len (_cbbg ));_adc :=_ff [:_ef .BlockSize ];if _ ,_dbg :=_ea .ReadFull (_dg .Reader ,_adc );
_dbg !=nil {return nil ,_dbg ;};_feb :=_bff .NewCFBEncrypter (_ceg ,_adc );_feb .XORKeyStream (_ff [_ef .BlockSize :],_cbbg );_feea :=make ([]byte ,_a .URLEncoding .EncodedLen (len (_ff )));_a .URLEncoding .Encode (_feea ,_ff );return _feea ,nil ;};func (_dd *meteredClient )getStatus ()(meteredStatusResp ,error ){var _dfe meteredStatusResp ;
_cbb :=_dd ._bbe +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _ebd meteredStatusForm ;_egc ,_gbb :=_bg .Marshal (_ebd );if _gbb !=nil {return _dfe ,_gbb ;};_fc ,_gbb :=_fcc (_egc );if _gbb !=nil {return _dfe ,_gbb ;
};_gcg ,_gbb :=_bc .NewRequest ("\u0050\u004f\u0053\u0054",_cbb ,_fc );if _gbb !=nil {return _dfe ,_gbb ;};_gcg .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_gcg .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_gcg .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_gcg .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_dd ._dgcc );_ed ,_gbb :=_dd ._gdb .Do (_gcg );if _gbb !=nil {return _dfe ,_gbb ;};defer _ed .Body .Close ();if _ed .StatusCode !=200{return _dfe ,_df .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ed .StatusCode );
};_defg ,_gbb :=_fdg (_ed );if _gbb !=nil {return _dfe ,_gbb ;};_gbb =_bg .Unmarshal (_defg ,&_dfe );if _gbb !=nil {return _dfe ,_gbb ;};return _dfe ,nil ;};var _ac =_bf .Date (2020,1,1,0,0,0,0,_bf .UTC );func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_eef .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_eef .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _df .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _edc !=nil &&(_edc ._cc ||_edc .Tier !=LicenseTierUnlicensed ){_eef .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _be .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_dac :=_dcb ();_dac ._dgcc =apiKey ;_cdf ,_aed :=_dac .getStatus ();if _aed !=nil {return _aed ;};if !_cdf .Valid {return _be .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");
};_bbg :=&LicenseKey {_cc :true ,_gca :apiKey };_edc =_bbg ;return nil ;};func _faf ()(_c .IP ,error ){_dddc ,_acb :=_c .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");if _acb !=nil {return nil ,_acb ;};defer _dddc .Close ();
_fg :=_dddc .LocalAddr ().(*_c .UDPAddr );return _fg .IP ,nil ;};type meteredClient struct{_bbe string ;_dgcc string ;_gdb *_bc .Client ;};func _ggc (_defe string )(LicenseKey ,error ){var _ce LicenseKey ;_ece ,_af :=_gea (_ec ,_ga ,_defe );if _af !=nil {return _ce ,_af ;
};_geg ,_af :=_cb (_gec ,_ece );if _af !=nil {return _ce ,_af ;};_af =_bg .Unmarshal (_geg ,&_ce );if _af !=nil {return _ce ,_af ;};_ce .CreatedAt =_bf .Unix (_ce .CreatedAtInt ,0);if _ce .ExpiresAtInt > 0{_ceb :=_bf .Unix (_ce .ExpiresAtInt ,0);_ce .ExpiresAt =&_ceb ;
};return _ce ,nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);func TrackUse (useKey string ){if _edc ==nil {return ;};if !_edc ._cc ||len (_edc ._gca )==0{return ;};if len (useKey )==0{return ;};_fbb .Lock ();defer _fbb .Unlock ();if _gdf ==nil {_gdf =map[string ]int {};
};_gdf [useKey ]++;};func (_fbc *LicenseKey )Validate ()error {if _fbc ._cc {return nil ;};if len (_fbc .LicenseId )< 10{return _df .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");
};if len (_fbc .CustomerId )< 10{return _df .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");};if len (_fbc .CustomerName )< 1{return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");
};if _ca .After (_fbc .CreatedAt ){return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fbc .ExpiresAt ==nil {_dea :=_fbc .CreatedAt .AddDate (1,0,0);if _ac .After (_dea ){_dea =_ac ;};_fbc .ExpiresAt =&_dea ;};if _fbc .CreatedAt .After (*_fbc .ExpiresAt ){return _df .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _fbc .isExpired (){return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_fbc .CreatorName )< 1{return _df .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_fbc .CreatorEmail )< 1{return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _fbc .CreatedAt .After (_cba ){if !_fbc .UniPDF {return _df .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func (_fef *LicenseKey )TypeToString ()string {if _fef ._cc {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";};if _fef .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
};if _fef .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";};if _fef .Tier ==LicenseTierIndividual ||_fef .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};func (_eefa *meteredClient )checkinUsage (_dda meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_dda .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_dda .PackageVersion =_eef .Version ;var _ged meteredUsageCheckinResp ;_bca :=_eefa ._bbe +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_afb ,_aeg :=_bg .Marshal (_dda );if _aeg !=nil {return _ged ,_aeg ;
};_egb ,_aeg :=_fcc (_afb );if _aeg !=nil {return _ged ,_aeg ;};_geac ,_aeg :=_bc .NewRequest ("\u0050\u004f\u0053\u0054",_bca ,_egb );if _aeg !=nil {return _ged ,_aeg ;};_geac .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_geac .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_geac .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_geac .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_eefa ._dgcc );_cac ,_aeg :=_eefa ._gdb .Do (_geac );if _aeg !=nil {return _ged ,_aeg ;};defer _cac .Body .Close ();if _cac .StatusCode !=200{return _ged ,_df .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_cac .StatusCode );
};_dffd ,_aeg :=_fdg (_cac );if _aeg !=nil {return _ged ,_aeg ;};_aeg =_bg .Unmarshal (_dffd ,&_ged );if _aeg !=nil {return _ged ,_aeg ;};return _ged ,nil ;};var _gdf map[string ]int ;type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;
CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;CreatedAt _bf .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_bf .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;
CreatorEmail string `json:"creator_email"`;UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_cc bool ;_gca string ;};func init (){_gega :=_ba .Getenv (_efd );_cef :=_ba .Getenv (_aacc );
if len (_gega )==0||len (_cef )==0{return ;};_gga ,_aaf :=_bb .ReadFile (_gega );if _aaf !=nil {_eef .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_aaf );
return ;};_aaf =SetLicenseKey (string (_gga ),_cef );if _aaf !=nil {_eef .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_aaf );
return ;};};func _cbg (_bfea string ,_aac string ,_ddd bool )error {if _edc ==nil {return _be .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");};if !_edc ._cc ||len (_edc ._gca )==0{return nil ;};if len (_bfea )==0&&!_ddd {return _be .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};_fbb .Lock ();defer _fbb .Unlock ();if _dcba ==nil {_dcba =map[string ]struct{}{};};if _gdf ==nil {_gdf =map[string ]int {};};_ccfb :=0;if !_ddd {_ ,_cebg :=_dcba [_bfea ];if !_cebg {_dcba [_bfea ]=struct{}{};_ccfb ++;};if _ccfb ==0{return nil ;};_gdf [_aac ]++;
};_bac :=_bf .Now ();_gag ,_ccea :=_cebe .loadState (_edc ._gca );if _ccea !=nil {_eef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_ccea );return _ccea ;};if _gag .Usage ==nil {_gag .Usage =map[string ]int {};};for _ccc ,_ede :=range _gdf {_gag .Usage [_ccc ]+=_ede ;
};_gdf =nil ;const _cbd =24*_bf .Hour ;const _ad =3*24*_bf .Hour ;if len (_gag .Instance )==0||_bac .Sub (_gag .LastReported )> _cbd ||(_gag .LimitDocs &&_gag .RemainingDocs <=_gag .Docs +int64 (_ccfb ))||_ddd {_ege ,_dbe :=_ba .Hostname ();if _dbe !=nil {return _dbe ;
};_gfa :=_gag .Docs ;_ebda ,_dcd ,_dbe :=_dcc ();if _dbe !=nil {return _dbe ;};_g .Strings (_dcd );_g .Strings (_ebda );_beg ,_dbe :=_faf ();if _dbe !=nil {return _dbe ;};_cebc :=false ;for _ ,_fcb :=range _dcd {if _fcb ==_beg .String (){_cebc =true ;};
};if !_cebc {_dcd =append (_dcd ,_beg .String ());};_ecee :=_dcb ();_ecee ._dgcc =_edc ._gca ;_gfa +=int64 (_ccfb );_dce :=meteredUsageCheckinForm {Instance :_gag .Instance ,Next :_gag .Next ,UsageNumber :int (_gfa ),NumFailed :_gag .NumErrors ,Hostname :_ege ,LocalIP :_gb .Join (_dcd ,"\u002c\u0020"),MacAddress :_gb .Join (_ebda ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_eef .Version ,Usage :_gag .Usage };
if len (_ebda )==0{_dce .MacAddress ="\u006e\u006f\u006e\u0065";};_ggcd :=int64 (0);_gade :=_gag .NumErrors ;_ada :=_bac ;_gedg :=0;_aabb :=_gag .LimitDocs ;_gceg ,_dbe :=_ecee .checkinUsage (_dce );if _dbe !=nil {if _bac .Sub (_gag .LastReported )> _ad {return _be .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_ggcd =_gfa ;_gade ++;_ada =_gag .LastReported ;}else {_aabb =_gceg .LimitDocs ;_gedg =_gceg .RemainingDocs ;_gade =0;};if len (_gceg .Instance )==0{_gceg .Instance =_dce .Instance ;};if len (_gceg .Next )==0{_gceg .Next =_dce .Next ;};_dbe =_cebe .updateState (_ecee ._dgcc ,_gceg .Instance ,_gceg .Next ,int (_ggcd ),_aabb ,_gedg ,int (_gade ),_ada ,nil );
if _dbe !=nil {return _dbe ;};if !_gceg .Success {return _df .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gceg .Message );};}else {_ccea =_cebe .updateState (_edc ._gca ,_gag .Instance ,_gag .Next ,int (_gag .Docs )+_ccfb ,_gag .LimitDocs ,int (_gag .RemainingDocs ),int (_gag .NumErrors ),_gag .LastReported ,_gag .Usage );
if _ccea !=nil {return _ccea ;};};return nil ;};const (_ec ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";_ga ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
);func _eaaf (_dcdc ,_egcd []byte )([]byte ,error ){_beee :=make ([]byte ,_a .URLEncoding .DecodedLen (len (_egcd )));_geda ,_fdb :=_a .URLEncoding .Decode (_beee ,_egcd );if _fdb !=nil {return nil ,_fdb ;};_beee =_beee [:_geda ];_dgd ,_fdb :=_ef .NewCipher (_dcdc );
if _fdb !=nil {return nil ,_fdb ;};if len (_beee )< _ef .BlockSize {return nil ,_be .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");};_fcaa :=_beee [:_ef .BlockSize ];_beee =_beee [_ef .BlockSize :];
_cgca :=_bff .NewCFBDecrypter (_dgd ,_fcaa );_cgca .XORKeyStream (_beee ,_beee );return _beee ,nil ;};func (_cdb defaultStateHolder )loadState (_bbda string )(reportState ,error ){_bfd :=_gae ();if len (_bfd )==0{return reportState {},_be .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_egf :=_f .Join (_bfd ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_bfa :=_ba .MkdirAll (_egf ,0777);if _bfa !=nil {return reportState {},_bfa ;};if len (_bbda )< 20{return reportState {},_be .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");
};_cgc :=[]byte (_bbda );_cce :=_fa .Sum512_256 (_cgc [:20]);_gaa :=_bcb .EncodeToString (_cce [:]);_dbc :=_f .Join (_egf ,_gaa );_ccf ,_bfa :=_bb .ReadFile (_dbc );if _bfa !=nil {if _ba .IsNotExist (_bfa ){return reportState {},nil ;};_eef .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_bfa );
return reportState {},_be .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _gcbb ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_ccf ,_bfa =_eaaf ([]byte (_gcbb ),_ccf );if _bfa !=nil {return reportState {},_bfa ;
};var _fee reportState ;_bfa =_bg .Unmarshal (_ccf ,&_fee );if _bfa !=nil {_eef .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_bfa );return reportState {},_be .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _fee ,nil ;};type meteredUsageCheckinResp struct{Instance string `json:"inst"`;Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};var _ca =_bf .Date (2010,1,1,0,0,0,0,_bf .UTC );
func SetLicenseKey (content string ,customerName string )error {_bcf ,_cadc :=_ggc (content );if _cadc !=nil {_eef .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_cadc );
return _cadc ;};if !_gb .EqualFold (_bcf .CustomerName ,customerName ){_eef .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_bcf .CustomerName );
return _df .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_bcf .CustomerName );
};_cadc =_bcf .Validate ();if _cadc !=nil {_eef .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_cadc );
return _cadc ;};_edc =&_bcf ;return nil ;};